(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[85],{"1d80":function(t,s,a){"use strict";a.r(s);var e=function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("doc-page",{attrs:{title:"Commands List",nav:t.nav}},[a("p",[t._v("Familiarize yourself with the list of available commands inside a Quasar project:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar\n\n  ___\n / _ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" _   _  __ _ ___  __ _ _ __\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ _"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v(" / __"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ _"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__|\n| |_| | |_| | (_| \\__ \\ (_| | |\n \\__\\_"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v('__,_|\\__,_|___/\\__,_|_|\n\n  Example usage\n    $ quasar <command> <options>\n\n  Help for a command\n    $ quasar <command> --help\n    $ quasar <command> -h\n\n  Options\n    --version, -v Print Quasar App CLI version\n\n  Commands\n    dev, d        Start a dev server for your App\n    build, b      Build your app for production\n    clean, c      Clean all build artifacts\n    new, n        Quickly scaffold page/layout/component/... vue file\n    mode, m       Add/remove Quasar Modes for your App\n    inspect       Inspect generated Webpack config\n    ext, e        Manage Quasar App Extensions\n    run, r        Run specific command provided by an installed\n                    Quasar App Extension\n    describe      Describe a Quasar API (component)\n    test, t       Run @quasar/testing App Extension command\n                    - requires @quasar/testing App Extension to be installed\n                    - this is an alias command for convenience purposes\n    info, i       Display info about your machine and your App\n    help, h       Displays this message\n\n  If the specified command is not found, then "quasar run"\n  will be executed with the provided arguments.\n\n  Commands supplied by @quasar/cli global installation:\n\n    upgrade       Check (and optionally) upgrade Quasar packages\n                    from a Quasar project folder\n    serve         Create an ad-hoc server on App\'')]),t._v("s distributables\n")])]),a("p",[t._v("See help for any command:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --help\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"create"},on:{click:function(s){return t.copyHeading("create")}}},[t._v("create")]),a("p",[t._v("Creates an App folder with initial project boilerplate.")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar create "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("folder_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"upgrade"},on:{click:function(s){return t.copyHeading("upgrade")}}},[t._v("upgrade")]),a("p",[t._v("Check (and optionally) upgrade Quasar packages from a Quasar project folder:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# check for upgradable packages")]),t._v("\n$ quasar upgrade\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do the actual upgrade")]),t._v("\n$ quasar upgrade --install\n")])]),a("div",{staticClass:"doc-note doc-note--warning"},[a("p",{staticClass:"doc-note__title"},[t._v("Note for code editor terminals")]),a("p",[t._v("If you’re using a code editor terminal instead of the real one, you run "),a("code",{staticClass:"doc-token"},[t._v("quasar upgrade")]),t._v(" and get an error "),a("em",[t._v("Command not found")]),t._v(" or "),a("em",[t._v("@quasar/cli")]),t._v(" version appears to be "),a("em",[t._v("undefined")]),t._v(", you will need to go to the settings of your code editor terminal and untick the option (or its equivalent) "),a("em",[t._v("Add ‘node_modules/.bin’ from the project root to %PATH%")]),t._v(" then restart your code editor.")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"info"},on:{click:function(s){return t.copyHeading("info")}}},[t._v("info")]),a("p",[t._v("The Quasar CLI is equipped with a stable combination of multiple NPM build packages (Webpack, Vue, etc) which gets updated frequently after heavy testing.")]),a("p",[t._v("In order for you to see what versions of Node, NPM, Quasar CLI, Quasar, Vue, Webpack, Cordova, Babel and many more, issue this command in a Quasar project folder:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar info\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"dev"},on:{click:function(s){return t.copyHeading("dev")}}},[t._v("dev")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar dev -h\n\n  Description\n    Starts the app "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" development mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hot-code reloading, error\n    reporting, etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  Usage\n    $ quasar dev\n    $ quasar dev -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    $ quasar dev -m ssr\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# alias for "quasar dev -m cordova -T ios"')]),t._v("\n    $ quasar dev -m ios\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# alias for "quasar dev -m cordova -T android"')]),t._v("\n    $ quasar dev -m android\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# passing extra parameters and/or options to")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# underlying "cordova" or "electron" executables:')]),t._v("\n    $ quasar dev -m ios -- some params --and options --here\n    $ quasar dev -m electron -- --no-sandbox --disable-setuid-sandbox\n\n  Options\n    --mode, -m       App mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("spa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ssr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("pwa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("cordova"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("capacitor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("electron"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: spa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --port, -p       A port number on "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" to start the application\n    --hostname, -H   A "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hostname")]),t._v(" to use "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" serving the application\n    --help, -h       Displays this message\n\n    Only "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Cordova mode:\n    --target, -T     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" App target\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("blackberry10"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("browser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("osx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ubuntu"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("webos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    --emulator, -e   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("optional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Emulator name\n                        Examples: iPhone-7, iPhone-X\n                        iPhone-X,com.apple.CoreSimulator.SimRuntime.iOS-12-2\n    --ide, -i        Open IDE "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Android Studio / XCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" instead of letting Cordova\n                        booting up the emulator, "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--emulator"')]),t._v("\n                        param will have no effect\n\n    --devtools, -d   Open remote Vue Devtools\n\n    Only "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Capacitor mode:\n    --target, -T     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" App target\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),a("p",[t._v("The Quasar development server allows you to develop your App by compiling and maintaining code in-memory. A web server will serve your App while offering hot-reload out of the box. Running in-memory offers faster rebuilds when you change your code.")]),a("blockquote",{staticClass:"doc-note"},[a("p",[t._v("Hot Reload is much more than just refreshing your browser when code changes. It skips the refresh and updates your code on the fly, while maintaining your App’s state (like your Vue’s model data). Please note that there are cases when this is impossible, so the dev webserver will simply refresh your browser. (Always ensure you are running only one instance of Quasar CLI at a time, otherwise Hot-Reload and other stuff will break!)")])]),a("p",[t._v("Based on what you want to develop, you can start the development server by using “quasar dev” command as follows:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Developing a SPA")]),t._v("\n$ quasar dev\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...or")]),t._v("\n$ quasar dev -m spa\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Developing for SSR")]),t._v("\n$ quasar dev -m ssr\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Developing a PWA")]),t._v("\n$ quasar dev -m pwa\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Developing a Mobile App (through Cordova)")]),t._v("\n$ quasar dev -m cordova -T "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or the short form:")]),t._v("\n$ quasar dev -m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Developing an Electron App")]),t._v("\n$ quasar dev -m electron\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# passing extra parameters and/or options to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# underlying "cordova" or "electron" executables:')]),t._v("\n$ quasar dev -m ios -- some params --and options --here\n$ quasar dev -m electron -- --no-sandbox --disable-setuid-sandbox\n")])]),a("p",[t._v("If you wish to change the hostname or port serving your App you have 3 options:")]),a("ul",[a("li",[t._v("Edit ‘/quasar.conf.js’:"),a("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[t._v("devServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'...'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("li",[t._v("Through ‘-H’ (hostname) and ‘-p’ (port) command options.")]),a("li",[t._v("If this is a one time thing, specify the hostname and/or port as an environment variable:"),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(" quasar dev\n$ "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOSTNAME")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(".1.14 quasar dev\n")])])])]),a("p",[t._v("If there appears to be an issue with hot reload, you can try two fixes:")]),a("ul",[a("li",[a("p",[t._v("Change the permissions for the project folder with")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" -R username: "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n")])])]),a("li",[a("p",[t._v("or run the dev server with root privileges")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" quasar dev\n")])])])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"build"},on:{click:function(s){return t.copyHeading("build")}}},[t._v("build")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar build -h\n\n  Description\n    Builds distributables of your app.\n\n  Usage\n    $ quasar build\n    $ quasar build -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("port number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    $ quasar build -m ssr\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# alias for "quasar build -m cordova -T ios"')]),t._v("\n    $ quasar build -m ios\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# alias for "quasar build -m cordova -T android"')]),t._v("\n    $ quasar build -m android\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# passing extra parameters and/or options to")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# underlying "cordova" executable:')]),t._v("\n    $ quasar build -m ios -- some params --and options --here\n\n  Options\n    --mode, -m      App mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("spa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ssr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("pwa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("cordova"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("capacitor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("electron"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: spa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --target, -T    App target\n                      - Cordova "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: all installed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("blackberry10"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("browser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("osx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ubuntu"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("webos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("windows"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                      - Capacitor\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                      - Electron with default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"electron-packager"')]),t._v(" bundler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: yours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("darwin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("win32"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("linux"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mas"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                      - Electron with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"electron-builder"')]),t._v(" bundler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: yours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("darwin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mac"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("win32"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("win"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("linux"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    --publish, -P   Also trigger publishing hooks "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("if any are specified"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      - Has special meaning when building with Electron mode and using\n                        electron-builder as bundler\n    --debug, -d     Build "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" debugging purposes\n    --skip-pkg, -s  Build only UI "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("skips creating Cordova/Capacitor/Electron executables"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      - Cordova "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it only fills "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /src/cordova/www folder with the UI code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      - Capacitor "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it only fills "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /src/capacitor/www folder with the UI code"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      - Electron "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("it only creates the /dist/electron/UnPackaged folder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --help, -h      Displays this message\n\n    ONLY "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Cordova and Capacitor mode:\n    --ide, -i       Open IDE "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Android Studio / XCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" instead of finalizing with a\n                    terminal/console-only build\n\n    ONLY "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" Electron mode:\n    --bundler, -b   Bundler "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("electron-packager or electron-builder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("packager"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("builder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    --arch, -A      App architecture "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: yours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      - with default "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"electron-packager"')]),t._v(" bundler:\n                          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ia32"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("x64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("armv7l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("arm64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mips64el"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                      - with "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"electron-builder"')]),t._v(" bundler:\n                          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ia32"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("x64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("armv7l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("arm64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("all"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    ONLY "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" electron-builder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("when using "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"publish"')]),t._v(" parameter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":\n    --publish, -P  Publish options "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("onTag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("onTagOrDraft"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("always"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("never"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                     - see https://www.electron.build/configuration/publish\n")])]),a("p",[t._v("The Quasar CLI can pack everything together and optimize your App for production. It minifies source code, extracts vendor components, leverages browser cache and much more.")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build a SPA for production")]),t._v("\n$ quasar build\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...or")]),t._v("\n$ quasar build -m spa\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build a SSR for production")]),t._v("\n$ quasar build -m ssr\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build a PWA for production")]),t._v("\n$ quasar build -m pwa\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build a Mobile App (through Cordova)")]),t._v("\n$ quasar build -m cordova -T "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or the short form:")]),t._v("\n$ quasar build -m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("android"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Build an Electron App for production")]),t._v("\n$ quasar build -m electron\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# passing extra parameters and/or options to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# underlying "cordova" executable:')]),t._v("\n$ quasar build -m ios -- some params --and options --here\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a production build with ability to debug it")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (has source-maps and code is NOT minified)")]),t._v("\n$ quasar build -d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"clean"},on:{click:function(s){return t.copyHeading("clean")}}},[t._v("clean")]),a("p",[t._v("Cleans up all the build assets:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar clean\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"new"},on:{click:function(s){return t.copyHeading("new")}}},[t._v("new")]),a("p",[t._v("Generates Components, Pages, Layouts, Vuex Store.")]),a("div",{staticClass:"doc-note doc-note--tip"},[a("p",{staticClass:"doc-note__title"},[t._v("TIP")]),a("p",[t._v("This command is simply a helper in order to quickly scaffold a page/layout/component/vuex store module. You are not required to use it, but can help you when you don’t know how to start.")])]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar new -h\n\n  Description\n    Quickly scaffold a page/layout/component/store module.\n\n  Usage\n    $ quasar new "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("page_file_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    $ quasar new "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("layout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("layout_file_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    $ quasar new "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component_file_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    $ quasar new "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("boot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("boot_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    $ quasar new "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("store_module_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Examples:")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create src/pages/MyNewPage.vue:")]),t._v("\n    $ quasar new p MyNewPage\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create src/pages/MyNewPage.vue and src/pages/OtherPage.vue:")]),t._v("\n    $ quasar new p MyNewPage OtherPage\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create src/layouts/shop/Checkout.vue")]),t._v("\n    $ quasar new layout shop/Checkout.vue\n\n  Options\n    --help, -h     Displays this message\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"mode"},on:{click:function(s){return t.copyHeading("mode")}}},[t._v("mode")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar mode -h\n\n  Description\n    Add/Remove support "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" PWA / Cordova / Electron modes.\n  Usage\n    $ quasar mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("remove pwa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ssr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("cordova"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("electron"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# determine what modes are currently installed:")]),t._v("\n    $ quasar mode\n\n  Options\n    --help, -h    Displays this message\n")])]),a("p",[t._v("When you initialize a project with the CLI, you can build SPA (Single Page Website/Application), SSR (Server-side Render Website/Application with optional PWA client takeover), PWA (Progressive Web App), Mobile App (through Cordova), and/or Electron Apps. When you develop for SSR, PWA, Cordova or Electron, you need these modes installed. If you issue “quasar dev” or “quasar build” they will automatically be installed.")]),a("p",[t._v("These modes will add a “src-*” folder into your project with very specific code for it:")]),a("q-markup-table",{staticStyle:{width:"fit-content","max-width":"100%"},attrs:{"wrap-cells":!0,flat:!0,bordered:!0}},[a("thead",[a("tr",[a("th",{staticClass:"text-left"},[t._v("Folder")]),a("th",{staticClass:"text-left"},[t._v("Mode")]),a("th",{staticClass:"text-left"},[t._v("Description")])])]),a("tbody",[a("tr",[a("td",[t._v("src-ssr")]),a("td",[t._v("ssr")]),a("td",[t._v("Contains the production Node server files.")])]),a("tr",[a("td",[t._v("src-pwa")]),a("td",[t._v("pwa")]),a("td",[t._v("Contains the Service Worker file that you can tweak.")])]),a("tr",[a("td",[t._v("src-cordova")]),a("td",[t._v("cordova")]),a("td",[t._v("Is a Cordova project folder that will be using your ‘src’ as content. Tweak Cordova config, add/remove platforms, splash screens, Cordova plugins and so on from this folder. Do NOT touch “src-cordova/www” folder though as it will get overwritten at every build.")])]),a("tr",[a("td",[t._v("src-electron")]),a("td",[t._v("electron")]),a("td",[t._v("Has code for the main Electron thread. The renderer thread will be your app in ‘src’.")])])])]),a("p",[t._v("If for some reason you decide you don’t need a mode, you can remove it. "),a("strong",[t._v("This will permanently delete")]),t._v(" the respective “src-*” folder.")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar mode remove pwa\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"describe"},on:{click:function(s){return t.copyHeading("describe")}}},[t._v("describe")]),a("p",[t._v("This command is useful to describe the API of any Quasar components/directives/plugins that your project is using. "),a("strong",[t._v("It is specific to your Quasar version installed in your project folder.")])]),a("p",[t._v("Examples: "),a("code",{staticClass:"doc-token"},[t._v("$ quasar describe QIcon")]),t._v(", "),a("code",{staticClass:"doc-token"},[t._v("$ quasar describe TouchPan")]),t._v(", "),a("code",{staticClass:"doc-token"},[t._v("$ quasar describe Cookies")]),t._v(".")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar describe -h\n\n  Description\n    Describes a component API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" project's Quasar version being used\n\n  Usage\n    $ quasar describe "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component/directive/Quasar plugin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# display everything:")]),t._v("\n    $ quasar describe QIcon\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# displaying only props:")]),t._v("\n    $ quasar describe QIcon -p\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# displaying props and methods only:")]),t._v("\n    $ quasar describe QIcon -p -m\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# filtering by "si":')]),t._v("\n    $ quasar describe QIcon -f si\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# filtering only props by "co":')]),t._v("\n    $ quasar describe QIcon -p -f co\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Open docs URL:")]),t._v("\n    $ quasar describe QIcon -d\n\n  Options\n    --filter, -f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Filters the API\n    --props, -p           Displays the API props\n    --slots, -s           Displays the API slots\n    --methods, -m         Displays the API methods\n    --events, -e          Displays the API events\n    --value, -v           Displays the API value\n    --arg, -a             Displays the API arg\n    --modifiers, -M       Displays the API modifiers\n    --injection, -i       Displays the API injection\n    --quasar, -q          Displays the API quasar conf options\n    --help, -h            Displays this message\n")])]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar describe QIcon\n\n Describing QIcon component API\n Description is based on your project's Quasar version\n\n Properties\n\n   name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     Description: Name of the icon, following Quasar convention\n     Examples:\n       map\n       ion-add\n\n   color "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     Description: Color name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" component from the Quasar Color Palette\n     Examples:\n       primary\n       teal-10\n\n   size "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     Description: Size "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" CSS units, including unit name\n     Examples:\n       16px\n       2rem\n\n   left "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     Description: Apply a standard margin on the left side. Useful "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" icon is on the right side of something.\n\n   right "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Boolean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     Description: Apply a standard margin on the right side. Useful "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" icon is on the left side of something.\n\n Slots\n\n   default\n     Suggestions: QTooltip or QMenu\n\n Scoped Slots\n\n   *No scoped slots*\n\n Events\n\n   *No events*\n\n Methods\n\n   *No methods*\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"inspect"},on:{click:function(s){return t.copyHeading("inspect")}}},[t._v("inspect")]),a("p",[t._v("This command can be used to inspect the Webpack config generated by Quasar CLI.")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar inspect -h\n\n  Description\n    Inspect Quasar generated Webpack config\n\n  Usage\n    $ quasar inspect\n    $ quasar inspect -c build\n    $ quasar inspect -m electron -p "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module.rules'")]),t._v("\n\n  Options\n    --cmd, -c        Quasar "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dev"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --mode, -m       App mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("spa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ssr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("pwa"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("cordova"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("electron"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: spa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --depth, -d      Number of levels deep "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --path, -p       Path of config "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dot notation\n                        Examples:\n                          -p module.rules\n                          -p plugins\n    --help, -h       Displays this message\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"ext"},on:{click:function(s){return t.copyHeading("ext")}}},[t._v("ext")]),a("p",[t._v("This command is used to manage "),a("doc-link",{attrs:{to:"/app-extensions/introduction"}},[t._v("App Extensions")]),t._v(".")],1),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar ext -h\n\n  Description\n    Manage Quasar App Extensions\n\n  Usage\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# display list of installed extensions")]),t._v("\n    $ quasar ext\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add Quasar App Extension")]),t._v("\n    $ quasar ext "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ext-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove Quasar App Extension")]),t._v("\n    $ quasar ext remove "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ext-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add Quasar App Extension, but")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# skip installing the npm package")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (assumes it's already installed)")]),t._v("\n    $ quasar ext invoke "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ext-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Remove Quasar App Extension, but")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# skip uninstalling the npm package")]),t._v("\n    $ quasar ext uninvoke "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ext-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n  Options\n    --help, -h       Displays this message\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"run"},on:{click:function(s){return t.copyHeading("run")}}},[t._v("run")]),a("p",[t._v("This command is used to run commands supplied by the "),a("doc-link",{attrs:{to:"/app-extensions/introduction"}},[t._v("App Extensions")]),t._v(" that you’ve installed into your project folder.")],1),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar run -h\n\n  Description\n    Run app extension provided commands\n\n  Usage\n    $ quasar run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("extension-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("args, params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    $ quasar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("extension-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("args, params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    $ quasar run iconify create pic -s --mark some_file\n    $ quasar iconify create pic -s --mark some_file\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Note: "iconify" is an example and not a real extension.')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Looks for installed extension called "iconify"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (quasar-app-extension-iconify extension package)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# and runs its custom defined "create" command')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# with "pic" argument and "-s --mark some_file" params')]),t._v("\n\n  Options\n    --help, -h       Displays this message\n")])]),a("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"serve"},on:{click:function(s){return t.copyHeading("serve")}}},[t._v("serve")]),a("p",[t._v("This command can be used in production too and it is being supplied by the global installation of "),a("code",{staticClass:"doc-token"},[t._v("@quasar/cli")]),t._v(" package.")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ quasar serve -h\n\n  Description\n    Start a HTTP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" server on a folder.\n\n  Usage\n    $ quasar serve "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    $ quasar serve "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# serve current folder")]),t._v("\n\n    If you serve a SSR folder built with the CLI "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n    control is yielded to /index.js and params have no effect.\n\n  Options\n    --port, -p              Port to use "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --hostname, -H          Address to use "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --gzip, -g              Compress content "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --silent, -s            Suppress log message\n    --colors                Log messages with colors "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --open, -o              Open browser window after starting\n    --cache, -c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    Cache "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max-age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" seconds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                            Does not apply to /service-worker.js\n                            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("86400")]),t._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" hours"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --micro, -m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("seconds"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   Use micro-cache "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    --history               Use "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),t._v(" api fallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                              All requests fallback to /index.html,\n                              unless using "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--index"')]),t._v(" parameter\n    --index, -i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      History mode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("only"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" index url path\n                              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("default: index.html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    --https                 Enable HTTPS\n    --cert, -C "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       Path to SSL cert "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Optional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --key, -K "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("        Path to SSL key "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Optional"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    --proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file.js"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       Proxy specific requests defined "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                            File must "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" Array "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path, rule "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                            See example below. "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rule"')]),t._v(" is defined at:\n                            https://github.com/chimurai/http-proxy-middleware\n    --cors                  Enable CORS "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all requests\n    --help, -h              Displays this message\n\n  Proxy "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" example\n    module.exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),t._v(",\n        rule: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" target: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://www.example.org'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    --"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" will be transformed into app.use"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path, httpProxyMiddleware"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v("\n")])]),a("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Custom-Node-server"},on:{click:function(s){return t.copyHeading("Custom-Node-server")}}},[t._v("Custom Node server")]),a("p",[t._v("When building a SPA or PWA, the distributable folder can be served by any static webserver. To test it out (assuming you don’t have a specific publicPath or not using Vue Router “history” mode), you can use the “http-server” npm package.")]),a("p",[t._v("Or you can build your own server. Here are some examples:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// when using default Vue Router "hash" mode')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n  express "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  serveStatic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'serve-static'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("serveStatic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// when using Vue Router "history" mode')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n  express "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'express'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  serveStatic "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'serve-static'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  history "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connect-history-api-fallback'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("express")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("history")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("serveStatic")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dist"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("p",[t._v("If you need URL rewrites of API, or simply put you want to proxy your API requests, then you can use “http-proxy-middleware” package:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add this to one of the two previous examples:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" proxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http-proxy-middleware'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    target"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("http://my-api.com:5050")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pathRewrite"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^/api"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// then app.listen(...)")]),t._v("\n")])]),a("p",[t._v("Finally, run one of these files:")]),a("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[a("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[t._v("$ node my-server.js\n")])])],1)},n=[],r=a("8669"),o="Commands List | Quasar Framework",p="The entire list of Quasar CLI commands.",c={meta:{title:"Commands List",meta:{title:{name:"title",content:o},ogTitle:{name:"og:title",content:o},twitterTitle:{name:"twitter:title",content:o},description:{name:"description",content:p},ogDesc:{name:"og:description",content:p},twitterDesc:{name:"twitter:description",content:p}}},preFetch:function(t){var s=t.store;s.commit("updateToc",[{id:"create",title:"create"},{id:"upgrade",title:"upgrade"},{id:"info",title:"info"},{id:"dev",title:"dev"},{id:"build",title:"build"},{id:"clean",title:"clean"},{id:"new",title:"new"},{id:"mode",title:"mode"},{id:"describe",title:"describe"},{id:"inspect",title:"inspect"},{id:"ext",title:"ext"},{id:"run",title:"run"},{id:"serve",title:"serve"},{id:"Custom-Node-server",title:"Custom Node server",sub:!0}])},created:function(){this.nav=[{name:"Build Commands",category:"CLI Documentation",path:"/quasar-cli/cli-documentation/build-commands",dir:"left"},{name:"CSS Preprocessors",category:"CLI Documentation",path:"/quasar-cli/cli-documentation/css-preprocessors",dir:"right"}]},methods:{copyHeading:r["a"]}},i=c,l=a("2877"),v=Object(l["a"])(i,e,n,!1,null,null,null);s["default"]=v.exports}}]);