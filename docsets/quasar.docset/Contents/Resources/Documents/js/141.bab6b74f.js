(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[141],{"2aee":function(e,t,s){"use strict";s.r(t);var a=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("doc-page",{attrs:{title:"Configuring SSR",related:e.related,nav:e.nav}},[s("p",[e._v("We’ll be using Quasar CLI to develop and build a SSR website. The difference between building a SPA, Mobile App, Electron App, PWA or SSR is simply determined by the “mode” parameter in “quasar dev” and “quasar build” commands.")]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Installation"},on:{click:function(t){return e.copyHeading("Installation")}}},[e._v("Installation")]),s("p",[e._v("In order to build a SSR website, we first need to add the SSR mode to our Quasar project:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[e._v("$ quasar mode "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" ssr\n")])]),s("p",[e._v("If you want to jump right in and start developing, you can skip the “quasar mode” command and issue:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[e._v("$ quasar dev -m ssr\n")])]),s("p",[e._v("This will add SSR mode automatically, if it is missing.")]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Quasar.conf.js"},on:{click:function(t){return e.copyHeading("Quasar.conf.js")}}},[e._v("Quasar.conf.js")]),s("p",[e._v("This is the place where you can configure some SSR options. Like if you want the client side to takeover as a SPA (Single Page Application – the default behaviour), or as a PWA (Progressive Web App).")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n  ssr"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    pwa"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// should a PWA take over (default: false), or just a SPA?")]),e._v("\n    manualHydration"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// (@quasar/app v1.4.2+) Manually hydrate the store")]),e._v("\n    componentCache"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// lru-cache package options,")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -- @quasar/app v1.5+ --")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// optional; webpack config Object for")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// the Webserver part ONLY (/src-ssr/)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// which is invoked for production (NOT for dev)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("extendWebpack")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("cfg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// directly change props of cfg;")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// no need to return anything")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -- @quasar/app v1.5+ --")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// optional; EQUIVALENT to extendWebpack() but uses webpack-chain;")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// the Webserver part ONLY (/src-ssr/)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// which is invoked for production (NOT for dev)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chainWebpack")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("chain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// chain is a webpack-chain instance")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// of the Webpack configuration")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),s("blockquote",{staticClass:"doc-note"},[s("p",[e._v("If you decide to go with a PWA client takeover ("),s("strong",[e._v("which is a killer combo")]),e._v("), the Quasar CLI PWA mode will be installed too. You may want to check out the "),s("doc-link",{attrs:{to:"/quasar-cli/developing-pwa/introduction"}},[e._v("Quasar PWA")]),e._v(" guide too. But most importantly, make sure you read "),s("doc-link",{attrs:{to:"/quasar-cli/developing-ssr/ssr-with-pwa"}},[e._v("SSR with PWA")]),e._v(" page.")],1)]),s("p",[e._v("When building, "),s("code",{staticClass:"doc-token"},[e._v("extendWebpack()")]),e._v(" and "),s("code",{staticClass:"doc-token"},[e._v("chainWebpack()")]),e._v(" will receive one more parameter (Object), currently containing "),s("code",{staticClass:"doc-token"},[e._v("isServer")]),e._v(" or "),s("code",{staticClass:"doc-token"},[e._v("isClient")]),e._v(" boolean props, because there will be two Webpack builds (one for the server-side and one for the client-side).")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// quasar.conf.js")]),e._v("\nbuild"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("extendWebpack")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" isServer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" isClient "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),s("p",[e._v("If you want more information, please see this page that goes into more detail about "),s("doc-link",{attrs:{to:"/quasar-cli/cli-documentation/handling-webpack"}},[e._v("handling webpack")]),e._v(" in the "),s("code",{staticClass:"doc-token"},[e._v("quasar.conf.js")]),e._v(" file.")],1),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Nodejs-Server"},on:{click:function(t){return e.copyHeading("Nodejs-Server")}}},[e._v("Nodejs Server")]),s("p",[e._v("Adding SSR mode to a Quasar project means a new folder will be created: "),s("code",{staticClass:"doc-token"},[e._v("/src-ssr")]),e._v(", which contains SSR specific files which define your production Node webserver:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v("\n└── src-ssr/\n    ├── index.js      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Production Node webserver serving the app")]),e._v("\n    └── extension.js  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Common code for production & development server")]),e._v("\n")])]),s("p",[e._v("You can freely edit these files. You’re not required to use an Express server. Simply choose whatever fits you best and tweak however you want.")]),s("p",[e._v("Notice a few things:")]),s("ol",[s("li",[s("p",[e._v("These files run in a Node context (they are NOT transpiled by Babel), so use only the ES6 features that are supported by your Node version. (https://node.green/)")])]),s("li",[s("p",[e._v("If you import anything from node_modules, then make sure that the package is specified in package.json > dependencies and NOT in devDependencies.")])]),s("li",[s("p",[e._v("Do not change the names of these two files. You can however add any additional files that you may need. Just take into consideration that if you want common configuration of the Node webserver for both production & development, you need to add that to "),s("code",{staticClass:"doc-token"},[e._v("/src-ssr/extension.js")]),e._v(" file.")])]),s("li",[s("p",[e._v("When "),s("code",{staticClass:"doc-token"},[e._v("/src-ssr/extension.js")]),e._v(" is used by the development server, it assumes the configuration is ready to be used by an Express server. So plan accordingly. If you switch to another server, you may want to decouple extension.js from the production server (index.js).")])]),s("li",[s("p",[e._v("(@quasar/app v1.5+) The "),s("code",{staticClass:"doc-token"},[e._v("/src-ssr")]),e._v(" is built through a Webpack config for production (only). "),s("strong",[e._v("You will see this marked as “Webserver” when Quasar App CLI builds your app.")]),e._v(" You can chain/extend the Webpack configuration of these files through quasar.conf.js:")])])]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n  ssr"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -- @quasar/app v1.5+ --")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// optional; webpack config Object for")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// the Webserver part ONLY (/src-ssr/)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// which is invoked for production (NOT for dev)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("extendWebpack")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("cfg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// directly change props of cfg;")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// no need to return anything")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -- @quasar/app v1.5+ --")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// optional; EQUIVALENT to extendWebpack() but uses webpack-chain;")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// the Webserver part ONLY (/src-ssr/)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// which is invoked for production (NOT for dev)")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("chainWebpack")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v("chain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// chain is a webpack-chain instance")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// of the Webpack configuration")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Helping-SEO"},on:{click:function(t){return e.copyHeading("Helping-SEO")}}},[e._v("Helping SEO")]),s("p",[e._v("One of the main reasons when you develop a SSR instead of a SPA is for taking care of the SEO. And SEO can be greatly improved by using the "),s("doc-link",{attrs:{to:"/quasar-plugins/meta"}},[e._v("Quasar Meta Plugin")]),e._v(" to manage dynamic html markup required by the search engines.")],1),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Boot-Files"},on:{click:function(t){return e.copyHeading("Boot-Files")}}},[e._v("Boot Files")]),s("p",[e._v("When running on SSR mode, your application code needs to be isomorphic or “universal”, which means that it must run both on a Node context and in the browser. This applies to your "),s("doc-link",{attrs:{to:"/quasar-cli/cli-documentation/boot-files"}},[e._v("Boot Files")]),e._v(" too.")],1),s("p",[e._v("However, there are cases where you only want some boot files to run only on the server or only on the client-side. You can achieve that by specifying:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// quasar.conf.js")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("return")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n  boot"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'some-boot-file'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// runs on both server and client")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'some-other'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" server"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// this boot file gets embedded only on client-side")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" path"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'third'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" client"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// this boot file gets embedded only on server-side")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),s("p",[e._v("Just make sure that your app is consistent, though.")]),s("p",[e._v("When a boot file runs on the server, you will have access to one more parameter (called "),s("code",{staticClass:"doc-token"},[e._v("ssrContext")]),e._v(") on the default exported function:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// some boot file")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("export")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("default")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" ssrContext "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=>")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ssrContext has: { url, req, res }")]),e._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// You can add props to the ssrContext then use them in the src/index.template.html.")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Example - let's say we ssrContext.someProp = 'some value', then in index template we can reference it:")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// {{ someProp }}")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),s("p",[e._v("When you add such references ("),s("code",{staticClass:"doc-token"},[e._v("someProp")]),e._v(" surrounded by brackets in the example above) into your "),s("code",{staticClass:"doc-token"},[e._v("src/index.template.html")]),e._v(", make sure you tell Quasar it’s only valid for SSR builds:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("\x3c!-- index.template.html --\x3e")]),e._v("\n<% if (htmlWebpackPlugin.options.ctx.mode.ssr) { %>{{ someProp }} <% } %>\n")])])])},n=[],o=s("8669"),r="Configuring SSR | Quasar Framework",c="How to manage your server-side rendered apps with Quasar CLI.",p={meta:{title:"Configuring SSR",meta:{title:{name:"title",content:r},ogTitle:{name:"og:title",content:r},twitterTitle:{name:"twitter:title",content:r},description:{name:"description",content:c},ogDesc:{name:"og:description",content:c},twitterDesc:{name:"twitter:description",content:c}}},preFetch:function(e){var t=e.store;t.commit("updateToc",[{id:"Installation",title:"Installation"},{id:"Quasar.conf.js",title:"Quasar.conf.js"},{id:"Nodejs-Server",title:"Nodejs Server"},{id:"Helping-SEO",title:"Helping SEO"},{id:"Boot-Files",title:"Boot Files"}])},created:function(){this.related=[{name:"quasar.conf.js",category:"Quasar CLI",path:"/quasar-cli/quasar-conf-js"}],this.nav=[{name:"Writing Universal Code",category:"Developing SSR",path:"/quasar-cli/developing-ssr/writing-universal-code",dir:"left"},{name:"App Icons for SSR",category:"Developing SSR",path:"/quasar-cli/developing-ssr/app-icons-ssr",dir:"right"}]},methods:{copyHeading:o["a"]}},i=p,l=s("2877"),v=Object(l["a"])(i,a,n,!1,null,null,null);t["default"]=v.exports}}]);