(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[216],{2138:function(t,e,o){"use strict";o.r(e);var a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("doc-page",{attrs:{title:"Field",nav:t.nav}},[o("p",[t._v("The QField component is used to provide common functionality and aspect to form components. It uses "),o("code",{staticClass:"doc-token"},[t._v(":value")]),t._v(" (or "),o("code",{staticClass:"doc-token"},[t._v("v-model")]),t._v(" if you want to use "),o("code",{staticClass:"doc-token"},[t._v("clearable")]),t._v(" property) to have knowledge of the model of the component inside. It has support for labels, hints, errors, validation, and comes in a variety of styles and colors.")]),o("p",[t._v("QField allows you to display any form control (or almost anything as a matter of fact) inside it. Just place your desired content inside the "),o("code",{staticClass:"doc-token"},[t._v("control")]),t._v(" slot.")]),o("div",{staticClass:"doc-note doc-note--danger"},[o("p",{staticClass:"doc-note__title"},[t._v("WARNING")]),o("p",[t._v("Do NOT wrap QInput, QFile or QSelect with QField as these components already inherit QField.")])]),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Installation"},on:{click:function(e){return t.copyHeading("Installation")}}},[t._v("Installation")]),o("doc-installation",{attrs:{components:"QField"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Design"},on:{click:function(e){return t.copyHeading("Design")}}},[t._v("Design")]),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("The examples below use dumb content (text) just to show you the design that QField can use. For checking out examples that wrap real components, see the “Basic Features” section.")])]),o("div",{staticClass:"doc-note doc-note--danger"},[o("p",{staticClass:"doc-note__title"},[t._v("WARNING")]),o("p",[t._v("QField does not (and should not) manage your "),o("code",{staticClass:"doc-token"},[t._v("control")]),t._v(" slot, so if you use "),o("code",{staticClass:"doc-token"},[t._v("label")]),t._v(" prop, it might be a good idea to also specify "),o("code",{staticClass:"doc-token"},[t._v("stack-label")]),t._v(", otherwise it might overlap your control when QField is not focused.")])]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Overview"},on:{click:function(e){return t.copyHeading("Overview")}}},[t._v("Overview")]),o("p",[t._v("For your QField you can use only one of the main designs ("),o("code",{staticClass:"doc-token"},[t._v("filled")]),t._v(", "),o("code",{staticClass:"doc-token"},[t._v("outlined")]),t._v(", "),o("code",{staticClass:"doc-token"},[t._v("standout")]),t._v(", "),o("code",{staticClass:"doc-token"},[t._v("borderless")]),t._v("). You cannot use multiple as they are self-exclusive.")]),o("doc-example",{attrs:{title:"Design Overview",file:"QField/DesignOverview"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Coloring"},on:{click:function(e){return t.copyHeading("Coloring")}}},[t._v("Coloring")]),o("doc-example",{attrs:{title:"Coloring",file:"QField/Coloring"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Standard"},on:{click:function(e){return t.copyHeading("Standard")}}},[t._v("Standard")]),o("doc-example",{attrs:{title:"Standard",file:"QField/DesignStandard"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Filled"},on:{click:function(e){return t.copyHeading("Filled")}}},[t._v("Filled")]),o("doc-example",{attrs:{title:"Filled",file:"QField/DesignFilled"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Outlined"},on:{click:function(e){return t.copyHeading("Outlined")}}},[t._v("Outlined")]),o("doc-example",{attrs:{title:"Outlined",file:"QField/DesignOutlined"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Standout"},on:{click:function(e){return t.copyHeading("Standout")}}},[t._v("Standout")]),o("doc-example",{attrs:{title:"Standout",file:"QField/DesignStandout"}}),o("p",[t._v("One of the most appropriate use cases for Standout design is in a QToolbar:")]),o("doc-example",{attrs:{title:"Standout in QToolbar",file:"QField/StandoutToolbar"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Borderless"},on:{click:function(e){return t.copyHeading("Borderless")}}},[t._v("Borderless")]),o("p",[t._v("The "),o("code",{staticClass:"doc-token"},[t._v("borderless")]),t._v(" design allows you to seamlessly integrate your QField into other components without QField drawing a border around itself or changing its background color:")]),o("doc-example",{attrs:{title:"Borderless",file:"QField/Borderless"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Rounded-design"},on:{click:function(e){return t.copyHeading("Rounded-design")}}},[t._v("Rounded design")]),o("p",[t._v("The "),o("code",{staticClass:"doc-token"},[t._v("rounded")]),t._v(" prop only works along with Filled, Outlined and Standout designs, as showcased in the example below:")]),o("doc-example",{attrs:{title:"Rounded",file:"QField/Rounded"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Square-borders"},on:{click:function(e){return t.copyHeading("Square-borders")}}},[t._v("Square borders")]),o("p",[t._v("The "),o("code",{staticClass:"doc-token"},[t._v("square")]),t._v(" prop only makes sense along with Filled, Outlined and Standout designs, as showcased in the example below:")]),o("doc-example",{attrs:{title:"Square borders",file:"QField/SquareBorders"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Dark-background"},on:{click:function(e){return t.copyHeading("Dark-background")}}},[t._v("Dark background")]),o("doc-example",{attrs:{title:"Dark",file:"QField/Dark",dark:""}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Basic-features"},on:{click:function(e){return t.copyHeading("Basic-features")}}},[t._v("Basic features")]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Clearable"},on:{click:function(e){return t.copyHeading("Clearable")}}},[t._v("Clearable")]),o("p",[t._v("As a helper, you can use "),o("code",{staticClass:"doc-token"},[t._v("clearable")]),t._v(" prop so user can reset model to "),o("code",{staticClass:"doc-token"},[t._v("null")]),t._v(" through an appended icon.")]),o("div",{staticClass:"doc-note doc-note--warning"},[o("p",{staticClass:"doc-note__title"},[t._v("WARNING")]),o("p",[t._v("If using "),o("code",{staticClass:"doc-token"},[t._v("clearable")]),t._v(" you must use "),o("code",{staticClass:"doc-token"},[t._v("v-model")]),t._v(" or listen on "),o("code",{staticClass:"doc-token"},[t._v("@input")]),t._v(" and update the value.")])]),o("doc-example",{attrs:{title:"Clearable",file:"QField/Clearable"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Control-types"},on:{click:function(e){return t.copyHeading("Control-types")}}},[t._v("Control types")]),o("p",[t._v("Anything you place inside the "),o("code",{staticClass:"doc-token"},[t._v("control")]),t._v(" slot will be used as content of the field. We provide a few examples of controls below.")]),o("doc-example",{attrs:{title:"Control types",file:"QField/ControlTypes"}}),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("Most of the form controls always render something visible, so you if you’re using a "),o("code",{staticClass:"doc-token"},[t._v("label")]),t._v(" then you might want to set it along with "),o("code",{staticClass:"doc-token"},[t._v("stack-label")]),t._v(", otherwise the label will overlap the enclosed control.")])]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Prefix-and-suffix"},on:{click:function(e){return t.copyHeading("Prefix-and-suffix")}}},[t._v("Prefix and suffix")]),o("doc-example",{attrs:{title:"Prefix and suffix",file:"QField/PrefixSuffix"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Slots-with-QBtn-type-%E2%80%9Csubmit%E2%80%9D"},on:{click:function(e){return t.copyHeading("Slots-with-QBtn-type-%E2%80%9Csubmit%E2%80%9D")}}},[t._v("Slots with QBtn type “submit”")]),o("div",{staticClass:"doc-note doc-note--warning"},[o("p",{staticClass:"doc-note__title"},[t._v("WARNING")]),o("p",[t._v("When placing a QBtn with type “submit” in one of the “before”, “after”, “prepend”, or “append” slots of a QField, QInput or QSelect, you should also add a "),o("code",{staticClass:"doc-token"},[t._v("@click")]),t._v(" listener on the QBtn in question. This listener should call the method that submits your form. All “click” events in such slots are not propagated to their parent elements.")])]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Loading-state"},on:{click:function(e){return t.copyHeading("Loading-state")}}},[t._v("Loading state")]),o("doc-example",{attrs:{title:"Loading state",file:"QField/LoadingState"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Validation"},on:{click:function(e){return t.copyHeading("Validation")}}},[t._v("Validation")]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Internal-validation"},on:{click:function(e){return t.copyHeading("Internal-validation")}}},[t._v("Internal validation")]),o("p",[t._v("You can validate QField components with "),o("code",{staticClass:"doc-token"},[t._v(":rules")]),t._v(" prop. Specify array of embedded rules or your own validators. Your custom validator will be a function which returns "),o("code",{staticClass:"doc-token"},[t._v("true")]),t._v(" if validator succeeds or "),o("code",{staticClass:"doc-token"},[t._v("String")]),t._v(" with error message if it doesn’t succeed.")]),o("p",[t._v("This is so you can write convenient rules of shape like:")]),o("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[o("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[o("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" condition "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" errorMessage\n")])]),o("p",[t._v("For example:")]),o("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[o("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[o("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" value "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Value should be lower'")]),t._v("\n")])]),o("p",[t._v("You can reset the validation by calling "),o("code",{staticClass:"doc-token"},[t._v("resetValidation()")]),t._v(" method on the QField.")]),o("doc-example",{attrs:{title:"Basic",file:"QField/ValidationRequired"}}),o("doc-example",{attrs:{title:"Maximum value",file:"QField/ValidationMaxValue"}}),o("p",[t._v("If you set "),o("code",{staticClass:"doc-token"},[t._v("lazy-rules")]),t._v(", validation starts after first blur.")]),o("doc-example",{attrs:{title:"Lazy rules",file:"QField/ValidationLazy"}}),o("h4",{staticClass:"doc-heading doc-h4",attrs:{id:"Async-rules"},on:{click:function(e){return t.copyHeading("Async-rules")}}},[t._v("Async rules")]),o("p",[t._v("Rules can be async too, by using async/await or by directly returning a Promise.")]),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("Consider coupling async rules with "),o("code",{staticClass:"doc-token"},[t._v("debounce")]),t._v(" prop to avoid calling the async rules immediately on each keystroke, which might be detrimental to performance.")])]),o("doc-example",{attrs:{title:"Async rules",file:"QField/ValidationAsync"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"External-validation"},on:{click:function(e){return t.copyHeading("External-validation")}}},[t._v("External validation")]),o("p",[t._v("You can also use external validation and only pass "),o("code",{staticClass:"doc-token"},[t._v("error")]),t._v(" and "),o("code",{staticClass:"doc-token"},[t._v("error-message")]),t._v(" (enable "),o("code",{staticClass:"doc-token"},[t._v("bottom-slots")]),t._v(" to display this error message).")]),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("Depending on your needs, you might connect "),o("doc-link",{attrs:{to:"https://vuelidate.netlify.com/"}},[t._v("Vuelidate")]),t._v(" (our recommended approach) or some other validation library to QField.")],1)]),o("doc-example",{attrs:{title:"External",file:"QField/ValidationExternal"}}),o("p",[t._v("You can also customize the slot for error message:")]),o("doc-example",{attrs:{title:"Slot for error message",file:"QField/ValidationSlots"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"QField-API"},on:{click:function(e){return t.copyHeading("QField-API")}}},[t._v("QField API")]),o("doc-api",{attrs:{file:"QField"}})],1)},i=[],s=o("8669"),n="Field | Quasar Framework",d="The QField Vue component is used to provide common functionality and aspect to form components.",l={meta:{title:"Field",meta:{title:{name:"title",content:n},ogTitle:{name:"og:title",content:n},twitterTitle:{name:"twitter:title",content:n},description:{name:"description",content:d},ogDesc:{name:"og:description",content:d},twitterDesc:{name:"twitter:description",content:d}}},preFetch:function(t){var e=t.store;e.commit("updateToc",[{id:"Installation",title:"Installation"},{id:"Design",title:"Design"},{id:"Overview",title:"Overview",sub:!0},{id:"Coloring",title:"Coloring",sub:!0},{id:"Standard",title:"Standard",sub:!0},{id:"Filled",title:"Filled",sub:!0},{id:"Outlined",title:"Outlined",sub:!0},{id:"Standout",title:"Standout",sub:!0},{id:"Borderless",title:"Borderless",sub:!0},{id:"Rounded-design",title:"Rounded design",sub:!0},{id:"Square-borders",title:"Square borders",sub:!0},{id:"Dark-background",title:"Dark background",sub:!0},{id:"Basic-features",title:"Basic features"},{id:"Clearable",title:"Clearable",sub:!0},{id:"Control-types",title:"Control types",sub:!0},{id:"Prefix-and-suffix",title:"Prefix and suffix",sub:!0},{id:"Slots-with-QBtn-type-%E2%80%9Csubmit%E2%80%9D",title:"Slots with QBtn type “submit”",sub:!0},{id:"Loading-state",title:"Loading state",sub:!0},{id:"Validation",title:"Validation"},{id:"Internal-validation",title:"Internal validation",sub:!0},{id:"External-validation",title:"External validation",sub:!0},{id:"QField-API",title:"QField API"}])},created:function(){this.nav=[{name:"Form",category:"Form Components",path:"/vue-components/form",dir:"left"},{name:"Radio",category:"Form Components",path:"/vue-components/radio",dir:"right"}]},methods:{copyHeading:s["a"]}},c=l,r=o("2877"),u=Object(r["a"])(c,a,i,!1,null,null,null);e["default"]=u.exports}}]);