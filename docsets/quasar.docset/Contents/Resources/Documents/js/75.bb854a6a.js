(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[75],{"6bec":function(t,a,s){"use strict";s.r(a);var n=function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("doc-page",{attrs:{title:"RTL Support",related:t.related,nav:t.nav}},[s("p",[t._v("RTL is referring to “right to left” UI for languages that need it.")]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Enabling-RTL-support"},on:{click:function(a){return t.copyHeading("Enabling-RTL-support")}}},[t._v("Enabling RTL support")]),s("p",[t._v("To enable it, you need to edit "),s("code",{staticClass:"doc-token"},[t._v("/quasar.conf.js")]),t._v(":")]),s("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[t._v("build"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  rtl"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"How-it-works"},on:{click:function(a){return t.copyHeading("How-it-works")}}},[t._v("How it works")]),s("p",[t._v("RTL is tightly coupled to "),s("doc-link",{attrs:{to:"/options/quasar-language-packs"}},[t._v("Quasar Language Packs")]),t._v(". "),s("strong",[t._v("When Quasar is set to use an RTL language")]),t._v(" (language pack has “rtl” prop set to “true”) and "),s("strong",[t._v("RTL support is enabled")]),t._v(" (check step above for quasar.conf.js), then the UI will dynamically transform Quasar & your website/app code for RTL.")],1),s("p",[t._v("Let’s discuss about each of these two requirements:")]),s("ol",[s("li",[s("p",[s("em",[t._v("Quasar needs to be set to use an RTL language")]),t._v(".\nSee "),s("doc-link",{attrs:{to:"/options/quasar-language-packs"}},[t._v("Quasar Language Packs")]),t._v(" on how you can set a language. You can set a language as default or dynamically set one.")],1)]),s("li",[s("p",[s("em",[t._v("RTL support needs to be enabled")]),t._v(".\nYou need to set “rtl” to “true” under quasar.conf.js > “build”. What this does is it compiles CSS for both your website/app code and for Quasar components and add corresponding RTL CSS rules automatically. Your CSS bundle will slightly increase in size due to the addition of these CSS rules.")])])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Things-to-keep-in-mind"},on:{click:function(a){return t.copyHeading("Things-to-keep-in-mind")}}},[t._v("Things to keep in mind")]),s("ul",[s("li",[t._v("Both RTL and non-RTL Quasar language packs will work together and dynamically switch to/from RTL. So only choosing an RTL Quasar language pack will trigger the RTL UI for you. You don’t need separate builds of your app (one for non-RTL and one for RTL-only). The RTL is dynamically changed for you automatically.")]),s("li",[t._v("You can dynamically detect if you are on RTL mode by taking a look at Boolean "),s("code",{staticClass:"doc-token"},[t._v("this.$q.lang.rtl")]),t._v(". More info on "),s("doc-link",{attrs:{to:"/options/vue-prototype-injections"}},[t._v("Vue Prototype Injections")]),t._v(".")],1),s("li",[t._v("You need to be careful when writing your own CSS. Like mentioned above, Quasar will automatically add RTL rules based on your CSS code. So writing:")])]),s("pre",{pre:!0,attrs:{class:"doc-code language-css"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-css"}},[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("…will add this rule for RTL:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-css"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-css"}},[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[dir=rtl] .my-class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("Any CSS rule that refers to “left” or “right” is automatically triggering an equivalent RTL CSS rule to be added.")]),s("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Marking-CSS-rules-as-exceptions"},on:{click:function(a){return t.copyHeading("Marking-CSS-rules-as-exceptions")}}},[t._v("Marking CSS rules as exceptions")]),s("p",[t._v("If you need an exception so your CSS code will not add a corresponding RTL rule, then add this comment:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-css"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-css"}},[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rtl:ignore */")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("…or, if you are using Stylus:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-css"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-css"}},[t._v(".my-class\n  margin-left 10px "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* rtl:ignore */")]),t._v("\n")])]),s("p",[t._v("…or SCSS with indented form:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-css"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-css"}},[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-class\n  margin-left: 10px #")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/* rtl:ignore */"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("…or default SCSS:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-css"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-css"}},[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".my-class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("margin-left: 10px #")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/* rtl:ignore */"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("p",[t._v("Now both RTL and non-RTL UI mode will have "),s("code",{staticClass:"doc-token"},[t._v("margin-left")]),t._v(" prop.")]),s("p",[t._v("Sometimes you’ll need to make exceptions for whole DOM elements / components. In this case, add "),s("code",{staticClass:"doc-token"},[t._v('dir="ltr"')]),t._v(" or "),s("code",{staticClass:"doc-token"},[t._v('dir="rtl"')]),t._v(" HTML attribute to the outermost DOM element / component template:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("dir")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("rtl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--\n    this DIV and all its content will use RTL mode\n    regardless of Quasar language pack RTL settings\n  --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("p",[t._v("Or, if you need your RTL UI to use left-to-right (ltr) mode for a DOM element / component:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("dir")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ltr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--\n    this DIV and all its content will use non-RTL mode\n    regardless of Quasar language pack RTL settings\n  --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Handling-Quasar-UMD"},on:{click:function(a){return t.copyHeading("Handling-Quasar-UMD")}}},[t._v("Handling Quasar UMD")]),s("p",[t._v("To enable RTL UIs in UMD you need to include the RTL equivalent CSS tag for your Quasar version and also pack in a Quasar RTL language pack (like Hebrew or Farsi). Example:")]),s("pre",{pre:!0,attrs:{class:"doc-code language-html"}},[s("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-html"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ...\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\x3c!-- Replace "1.0.0" (below) with your Quasar version. --\x3e')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://cdn.jsdelivr.net/npm/quasar@^1.0.0/dist/quasar.rtl.min.css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ...\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\x3c!--\n      We also need an RTL Quasar language pack; let\'s take Hebrew as an example;\n      include this after Quasar JS tag;\n      Replace "1.0.0" (below) with your Quasar version.\n    --\x3e')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://cdn.jsdelivr.net/npm/quasar@^1.0.0/dist/lang/he.umd.min.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n      Quasar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Quasar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("he"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),s("p",[t._v("Check what tags you need to include in your HTML files by generating a sample with "),s("code",{staticClass:"doc-token"},[t._v("$ quasar create <folder> --kit umd")]),t._v(" and answering with “Yes” to the RTL question and specifying an RTL language for Quasar Language Pack.\nAlso notice the "),s("code",{staticClass:"doc-token"},[t._v('<html dir="rtl">')]),t._v(" tag at the beginning of the generated html file – you’ll need that too.")]),s("div",{staticClass:"doc-note doc-note--warning"},[s("p",{staticClass:"doc-note__title"},[t._v("CAVEAT")]),s("p",[t._v("Quasar CLI automatically adds equivalent RTL CSS rules for your website/app code, but this is not the case for UMD where Quasar CLI is not being used. You’ll have to manage writing the RTL equivalent of your website/app CSS code by yourself. It’s only Quasar components that will have this handled automatically.")])])])},e=[],r=s("8669"),o="RTL Support | Quasar Framework",p="Right to left support in a Quasar app.",c={meta:{title:"RTL Support",meta:{title:{name:"title",content:o},ogTitle:{name:"og:title",content:o},twitterTitle:{name:"twitter:title",content:o},description:{name:"description",content:p},ogDesc:{name:"og:description",content:p},twitterDesc:{name:"twitter:description",content:p}}},preFetch:function(t){var a=t.store;a.commit("updateToc",[{id:"Enabling-RTL-support",title:"Enabling RTL support"},{id:"How-it-works",title:"How it works"},{id:"Things-to-keep-in-mind",title:"Things to keep in mind"},{id:"Marking-CSS-rules-as-exceptions",title:"Marking CSS rules as exceptions",sub:!0},{id:"Handling-Quasar-UMD",title:"Handling Quasar UMD"}])},created:function(){this.related=[{name:"Quasar Language Packs",category:"Quasar Options & Helpers",path:"/options/quasar-language-packs"},{name:"App Internationalization",category:"Quasar Options & Helpers",path:"/options/app-internationalization"}],this.nav=[{name:"App Internationalization",category:"Quasar Options & Helpers",path:"/options/app-internationalization",dir:"left"},{name:"Installing Icon Libraries",category:"Quasar Options & Helpers",path:"/options/installing-icon-libraries",dir:"right"}]},methods:{copyHeading:r["a"]}},l=c,i=s("2877"),u=Object(i["a"])(l,n,e,!1,null,null,null);a["default"]=u.exports}}]);