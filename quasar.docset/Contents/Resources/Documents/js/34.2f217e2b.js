(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[34],{dcaa:function(t,e,n){"use strict";n.r(e);var s=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("doc-page",{attrs:{title:"Provide a UI component",nav:t.nav}},[n("p",[t._v("This guide is for when you want to create a new UI component and provide it through an App Extension, which will inject it into the hosting app.")]),n("div",{staticClass:"doc-note doc-note--tip"},[n("p",{staticClass:"doc-note__title"},[t._v("TIP")]),n("p",[t._v("In order for creating an App Extension project folder, please first read the "),n("doc-link",{attrs:{to:"/app-extensions/development-guide/introduction"}},[t._v("Development Guide > Introduction")]),t._v(".")],1)]),n("div",{staticClass:"doc-note doc-note--tip"},[n("p",{staticClass:"doc-note__title"},[t._v("Full Example")]),n("p",[t._v("To see an example of what we will build, head over to "),n("doc-link",{attrs:{to:"https://github.com/quasarframework/app-extension-examples/tree/master/my-component"}},[t._v("MyComponent full example")]),t._v(", which is a github repo with this App Extension.")],1)]),n("p",[t._v("Create a folder structure to keep your code modularized and organized. For instance, for a UI component, create a structure that looks like this:")]),n("pre",{pre:!0,attrs:{class:"doc-code language-bash"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-bash"}},[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── package.json\n└── src\n    ├── boot                         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# folder to contain 'boot' code")]),t._v("\n    │   └── register-my-component.js "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# boot file for component")]),t._v("\n    ├── component                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# folder to contain component")]),t._v("\n    │   ├── MyComponent.vue          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# component file (can be .vue or even .js)")]),t._v("\n    │   └── MyComponent.styl         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# stylus file for component (or .sass/.scss/.css, or whatever you need)")]),t._v("\n    └── index.js                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Described in Index API")]),t._v("\n")])]),n("p",[t._v("Now, you need to handle registering your component. You do this with the "),n("code",{staticClass:"doc-token"},[t._v("/index.js")]),t._v(" file (described in the "),n("doc-link",{attrs:{to:"/app-extensions/development-guide/index-api"}},[t._v("Index API")]),t._v(") that was created when you set up your new App Extension.")],1),n("p",[t._v("Let’s break it down.")]),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /index.js")]),t._v("\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("api")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Optional!)")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Quasar compatibility check; you may need")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// hard dependencies, as in a minimum version of the "quasar"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// package or a minimum version of "@quasar/app" CLI')]),t._v("\n  api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compatibleWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'quasar'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^1.0.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compatibleWith")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@quasar/app'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^1.0.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Here we extend /quasar.conf.js, so we can add")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a boot file which registers our new UI component;")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "extendConf" will be defined below (keep reading the tutorial)')]),t._v("\n  api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendQuasarConf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("extendConf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[t._v("The first group does a compatibility check with Quasar (which is optional, but recommended). If your component is using features of Quasar that were available after a certain version, you can make sure that the version of Quasar installed is the correct one.")]),n("div",{staticClass:"doc-note doc-note--tip"},[n("p",{staticClass:"doc-note__title"},[t._v("TIP")]),n("p",[t._v("Not only can you do a "),n("code",{staticClass:"doc-token"},[t._v("api.compatibleWith()")]),t._v(" to check against Quasar packages, but with any other available packages (that you do not supply yourself through your App Extension) as well. Please read "),n("doc-link",{attrs:{to:"/app-extensions/development-guide/introduction#Handling-package-dependencies"}},[t._v("Handling package dependencies")]),t._v(" section from the App Extension Development Guide > Introduction page for more information.")],1)]),n("p",[t._v("The second group tells Quasar to call our custom function when the "),n("code",{staticClass:"doc-token"},[t._v("extendQuasarConf")]),t._v(" CLI life-cycle hook is called. It would look something like this:")]),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /index.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extendConf")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("conf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make sure my-component boot file is registered")]),t._v("\n  conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~quasar-app-extension-my-component/src/boot/register-my-component.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make sure boot & component files get transpiled")]),t._v("\n  conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("build"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transpileDependencies"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/quasar-app-extension-my-component[\\\\/]src/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make sure my-component css goes through webpack to avoid ssr issues")]),t._v("\n  conf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("css"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'~quasar-app-extension-my-component/src/component/MyComponent.styl'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("p",[t._v("Finally, let’s see how the boot file would look like. Make sure that you read the "),n("doc-link",{attrs:{to:"/quasar-cli/cli-documentation/boot-files"}},[t._v("Boot files")]),t._v(" documentation and understand what a Boot file is first.")],1),n("pre",{pre:!0,attrs:{class:"doc-code language-js"}},[n("code",{pre:!0,attrs:{class:"doc-code__inner doc-code__inner--prerendered language-js"}},[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file: /src/boot/register-my-component.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MyComponent "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../component/MyComponent.vue'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// we globally register our component with Vue")]),t._v("\nVue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-component'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MyComponent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},a=[],o=n("8669"),r="Provide a UI component | Quasar Framework",p="Tips and tricks on how to provide a Vue component to the host app of a Quasar App Extension.",c={meta:{title:"Provide a UI component",meta:{title:{name:"title",content:r},ogTitle:{name:"og:title",content:r},twitterTitle:{name:"twitter:title",content:r},description:{name:"description",content:p},ogDesc:{name:"og:description",content:p},twitterDesc:{name:"twitter:description",content:p}}},preFetch:function(t){var e=t.store;e.commit("updateToc",[])},created:function(){this.nav=[{name:"Introduction",category:"Tips and Tricks",path:"/app-extensions/tips-and-tricks/introduction",dir:"left"},{name:"Provide a directive",category:"Tips and Tricks",path:"/app-extensions/tips-and-tricks/provide-a-directive",dir:"right"}]},methods:{copyHeading:o["a"]}},i=c,l=n("2877"),u=Object(l["a"])(i,s,a,!1,null,null,null);e["default"]=u.exports}}]);