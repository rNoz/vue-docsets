(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[242],{"650e":function(t,e,o){"use strict";o.r(e);var a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("doc-page",{attrs:{title:"Scroll Area",related:t.related,nav:t.nav}},[o("p",[t._v("The QScrollArea component offers a neat way of customizing the scrollbars by encapsulating your content. Think of it as a DOM element which has "),o("code",{staticClass:"doc-token"},[t._v("overflow: auto")]),t._v(", but with your own custom styled scrollbar instead of browser’s default one and a few nice features on top.")]),o("p",[t._v("This is especially useful for desktop as scrollbars are hidden on a mobile device. When on a mobile device, QScrollArea simply wraps the content in a "),o("code",{staticClass:"doc-token"},[t._v("<div>")]),t._v(" configured for default mobile browser scrolling – so no QScrollArea features apply on such devices. However, if configured with "),o("code",{staticClass:"doc-token"},[t._v("force-on-mobile")]),t._v(" prop, then QScrollArea will work just as on desktops, but it won’t have inertial scrolling.")]),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Installation"},on:{click:function(e){return t.copyHeading("Installation")}}},[t._v("Installation")]),o("doc-installation",{attrs:{components:"QScrollArea"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"Usage"},on:{click:function(e){return t.copyHeading("Usage")}}},[t._v("Usage")]),o("p",[t._v("The following examples are best seen on desktop as they make too little sense on a mobile device.")]),o("div",{staticClass:"doc-note doc-note--tip"},[o("p",{staticClass:"doc-note__title"},[t._v("TIP")]),o("p",[t._v("You can also take a look at "),o("doc-link",{attrs:{to:"/layout/drawer"}},[t._v("Layout Drawer")]),t._v(" to see some more examples of it in action.")],1)]),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Basic"},on:{click:function(e){return t.copyHeading("Basic")}}},[t._v("Basic")]),o("doc-example",{attrs:{title:"Basic",file:"QScrollArea/Basic"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Styled"},on:{click:function(e){return t.copyHeading("Styled")}}},[t._v("Styled")]),o("doc-example",{attrs:{title:"Styled",file:"QScrollArea/Styled"}}),o("doc-example",{attrs:{title:"Styled thumb and bar",file:"QScrollArea/StyledBar"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Controlling-scrollbar-visibility"},on:{click:function(e){return t.copyHeading("Controlling-scrollbar-visibility")}}},[t._v("Controlling scrollbar visibility")]),o("q-badge",{attrs:{label:"v1.3+"}}),o("p",[t._v("When using the "),o("code",{staticClass:"doc-token"},[t._v("visible")]),t._v(" Boolean prop, the default mouse over/leave behavior is disabled, leaving you in full control of the scrollbar visibility.")]),o("doc-example",{attrs:{title:"Controlling scrollbar visibility",file:"QScrollArea/ScrollbarVisibility"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Delay"},on:{click:function(e){return t.copyHeading("Delay")}}},[t._v("Delay")]),o("p",[t._v("When content changes, the scrollbar appears then disappears again. You can set a certain delay (amount of time in milliseconds) before scrollbar disappears again (if component is not hovered):")]),o("doc-example",{attrs:{title:"Delay",file:"QScrollArea/Delay"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Scroll-position"},on:{click:function(e){return t.copyHeading("Scroll-position")}}},[t._v("Scroll position")]),o("doc-example",{attrs:{title:"Scroll Position",file:"QScrollArea/ScrollPosition"}}),o("h3",{staticClass:"doc-heading doc-h3",attrs:{id:"Horizontal-mode"},on:{click:function(e){return t.copyHeading("Horizontal-mode")}}},[t._v("Horizontal mode")]),o("doc-example",{attrs:{title:"Horizontal mode",file:"QScrollArea/Horizontal"}}),o("h2",{staticClass:"doc-heading doc-h2",attrs:{id:"QScrollArea-API"},on:{click:function(e){return t.copyHeading("QScrollArea-API")}}},[t._v("QScrollArea API")]),o("doc-api",{attrs:{file:"QScrollArea"}})],1)},i=[],l=o("8669"),n="Scroll Area | Quasar Framework",r="The QScrollArea Vue component offers a way of customizing the scrollbars for all desktop browsers.",s={meta:{title:"Scroll Area",meta:{title:{name:"title",content:n},ogTitle:{name:"og:title",content:n},twitterTitle:{name:"twitter:title",content:n},description:{name:"description",content:r},ogDesc:{name:"og:description",content:r},twitterDesc:{name:"twitter:description",content:r}}},preFetch:function(t){var e=t.store;e.commit("updateToc",[{id:"Installation",title:"Installation"},{id:"Usage",title:"Usage"},{id:"Basic",title:"Basic",sub:!0},{id:"Styled",title:"Styled",sub:!0},{id:"Controlling-scrollbar-visibility",title:"Controlling scrollbar visibility",sub:!0},{id:"Delay",title:"Delay",sub:!0},{id:"Scroll-position",title:"Scroll position",sub:!0},{id:"Horizontal-mode",title:"Horizontal mode",sub:!0},{id:"QScrollArea-API",title:"QScrollArea API"}])},created:function(){this.related=[{name:"Layout Drawer",category:"Layout and Grid",path:"/layout/drawer"}],this.nav=[{name:"Responsive",category:"Vue Components",path:"/vue-components/responsive",dir:"left"},{name:"Separator",category:"Vue Components",path:"/vue-components/separator",dir:"right"}]},methods:{copyHeading:l["a"]}},c=s,d=o("2877"),p=Object(d["a"])(c,a,i,!1,null,null,null);e["default"]=p.exports}}]);